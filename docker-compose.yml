version: "3.1"

services:
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"
    container_name: nginx-proxy
    networks:
      - proxy_network
    ports:
      - 80:80
      - 443:443
    environment:
      - DEFAULT_HOST=${DEFAULT_HOST_SSL}
    volumes:
      - ./proxy/conf.d:/etc/nginx/conf.d:rw
      - ./proxy/vhost.d:/etc/nginx/vhost.d:rw
      - ./proxy/html:/usr/share/nginx/html:rw
      - ./proxy/certs:/etc/nginx/certs:ro
      - ./proxy/my_custom_proxy_settings.conf:/etc/nginx/conf.d/my_custom_proxy_settings.conf:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: unless-stopped

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    depends_on:
      - nginx-proxy
    networks:
      - proxy_network
    volumes:
      - ./proxy/certs:/etc/nginx/certs:rw
      - ./proxy/vhost.d:/etc/nginx/vhost.d:rw
      - ./proxy/html:/usr/share/nginx/html:rw
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  mongo:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: crypto-balance
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    volumes:
      - ./init-db.js:/docker-entrypoint-initdb.d/init.js
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}

  crypto-balance:
    build: .
    image: crypto-balance
    restart: unless-stopped
    networks:
      - proxy_network
    environment:
      ROCKET_ADDRESS: 0.0.0.0
      ROCKET_PORT: 8000
      APPLICATION_PASSWORD: ${APPLICATION_PASSWORD}
      BINANCE_API_KEY: ${BINANCE_API_KEY}
      BINANCE_API_SECRET: ${BINANCE_API_SECRET}
      NOMICS_API_KEY: ${NOMICS_API_KEY}
      MONGODB_HOST: mongo
      MONGODB_PORT: ${MONGODB_PORT}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - 80:8000

networks:
  proxy_network:
